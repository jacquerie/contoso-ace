{"version":3,"sources":["Footer.js","Chat.js","Dashboard.js","Chats.js","Header.js","Login.js","App.js","serviceWorker.js","index.js"],"names":["Footer","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","text","handleSendChange","bind","assertThisInitialized","handleSendClick","handleSendKeyPress","handlePredictClick","event","setState","target","value","_this2","send","then","_this3","key","predict","react_default","a","createElement","className","Navbar","dark","color","expand","fixed","Container","InputGroup","size","Input","type","onChange","onKeyPress","InputGroupAddon","addonType","Button","onClick","React","Component","Messages","messages","i","length","push","Message","customer","message","sender","Row","Col","xs","first_name","timestamp_default","time","timestamp","format","Card","body","style","backgroundColor","borderColor","CardText","outline","Predictions","intent","Intent","entities","Entities","ListGroup","ListGroupItem","Badge","pill","snippet","Chat","_id","match","params","id","fetchChat","timer","setInterval","clearInterval","fetch","concat","method","credentials","response","ok","json","_this4","JSON","stringify","_this5","offset","src_Footer","Dashboard","chats","handleClick","fetchChats","rows","cols","j","toCol","chat","CardBody","CardTitle","tag","full_name","context","router","history","toRows","contextTypes","PropTypes","object","isRequired","Chats","Route","path","exact","component","Header","logoutEmployee","employee","Nav","navbar","NavItem","NavLink","Login","email","password","handleEmailChange","handlePasswordChange","handleSubmit","preventDefault","loginEmployee","Form","onSubmit","FormGroup","Label","for","name","placeholder","App","fetchEmployee","BrowserRouter","src_Header_0","render","src_Login_0","assign","Boolean","window","location","hostname","ReactDOM","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.0f6ddd15.chunk.js","sourcesContent":["import React from 'react';\nimport {\n  Button,\n  Container,\n  Input,\n  InputGroup,\n  InputGroupAddon,\n  Navbar,\n} from 'reactstrap';\n\nclass Footer extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      text: '',\n    }\n\n    this.handleSendChange = this.handleSendChange.bind(this);\n    this.handleSendClick = this.handleSendClick.bind(this);\n    this.handleSendKeyPress = this.handleSendKeyPress.bind(this);\n    this.handlePredictClick = this.handlePredictClick.bind(this);\n  }\n\n  handleSendChange(event) {\n    this.setState({text: event.target.value});\n  }\n\n  handleSendClick(event) {\n    this.props.send(this.state.text).then(\n      () => this.setState({text: ''})\n    );\n  }\n\n  handleSendKeyPress(event) {\n    if (event.key === 'Enter') {\n      this.props.send(this.state.text).then(\n        () => this.setState({'text': ''})\n      );\n    }\n  }\n\n  handlePredictClick(event) {\n    this.props.predict();\n  }\n\n  render() {\n    return (\n      <div className=\"Footer\">\n        <Navbar dark color=\"primary\" expand=\"xs\" fixed=\"bottom\">\n          <Container>\n            <InputGroup size=\"lg\" className=\"mr-3\">\n              <Input\n                type=\"text\" value={this.state.text}\n                onChange={this.handleSendChange}\n                onKeyPress={this.handleSendKeyPress}\n              />\n              <InputGroupAddon addonType=\"append\">\n                <Button color=\"success\" onClick={this.handleSendClick}>\n                  Send\n                </Button>\n              </InputGroupAddon>\n            </InputGroup>\n            <Button color=\"danger\" size=\"lg\" onClick={this.handlePredictClick}>\n              Predict\n            </Button>\n          </Container>\n        </Navbar>\n      </div>\n    );\n  }\n}\n\nexport default Footer;\n","import React from 'react';\nimport Timestamp from 'react-timestamp';\nimport {\n  Badge,\n  Card,\n  CardText,\n  Col,\n  Container,\n  ListGroup,\n  ListGroupItem,\n  Row,\n} from 'reactstrap';\n\nimport Footer from './Footer';\n\nimport './Chat.css';\n\nclass Chat extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      _id: this.props.match.params.id,\n      customer: {},\n      entities: [],\n      intent: null,\n      messages: [],\n    };\n\n    this.fetchChat = this.fetchChat.bind(this);\n    this.send = this.send.bind(this);\n    this.predict = this.predict.bind(this);\n  }\n\n  componentDidMount() {\n    this.timer = setInterval(() => this.fetchChat(), 1000);\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.timer);\n  }\n\n  fetchChat() {\n    return fetch(`/api/chats/${this.state._id}`, {\n      method: 'GET',\n      credentials: 'same-origin',\n    }).then(\n      response => response.ok ? response.json() : {\n        _id: this.state._id,\n        customer: {},\n        entities: [],\n        intent: null,\n        messages: [],\n      }\n    ).then(\n      json => this.setState({\n        _id: json._id,\n        customer: json.customer,\n        entities: json.entities,\n        intent: json.intent,\n        messages: json.messages,\n      })\n    );\n  }\n\n  send(text) {\n    return fetch(`/api/chats/${this.state._id}/messages`, {\n      method: 'POST',\n      credentials: 'same-origin',\n      body: JSON.stringify({text: text}),\n    }).then(\n      response => {\n        if (response.ok) {\n          this.setState({\n            messages: this.state.messages.concat(response.json()),\n          });\n        }\n      }\n    );\n  }\n\n  predict() {\n    return fetch(`/api/chats/${this.state._id}/predict`, {\n      method: 'POST',\n      credentials: 'same-origin',\n    }).then(\n      response => response.ok ? response.json() : {\n        entities: this.state.entities,\n        intent: this.state.intent,\n      }\n    ).then(\n      json => this.setState({\n        entities: json.entities,\n        intent: json.intent,\n      })\n    );\n  }\n\n  render() {\n    return (\n      <div className=\"Chat\">\n        <Container>\n          <Row>\n            <Col xs=\"8\">\n              <Messages\n                customer={this.state.customer}\n                messages={this.state.messages}\n              />\n            </Col>\n            <Col xs={{ offset: 1, size: 3 }}>\n              <Predictions\n                entities={this.state.entities}\n                intent={this.state.intent}\n              />\n            </Col>\n          </Row>\n        </Container>\n        <Footer\n          send={this.send}\n          predict={this.predict}\n        />\n      </div>\n    );\n  }\n}\n\nfunction Messages(props) {\n  let messages = [];\n\n  for (let i = 0; i < props.messages.length; i++) {\n    messages.push(\n      <Message\n        customer={props.customer}\n        message={props.messages[i]}\n      />\n    );\n  }\n\n  return <div className=\"Messages\">{messages}</div>;\n}\n\nfunction Message(props) {\n  if (props.message.sender === 'customer') {\n    return (\n      <div className=\"Message\">\n        <Row className=\"align-items-center h-100\">\n          <Col xs=\"4\" className=\"text-center\">\n            <strong>{props.customer.first_name}</strong><br />\n            <Timestamp\n              time={props.message.timestamp / 1000} format='time'\n            />\n          </Col>\n          <Col xs=\"8\">\n            <Card body style={{\n              backgroundColor: \"rgba(0, 123, 255, 0.1)\",\n              borderColor: \"rgba(0, 123, 255)\",\n            }}>\n              <CardText>{props.message.text}</CardText>\n            </Card>\n          </Col>\n        </Row>\n      </div>\n    );\n } else {\n    return (\n      <div className=\"Message\">\n        <Row className=\"align-items-center h-100\">\n          <Col xs=\"8\">\n            <Card body outline color=\"secondary\">\n              <CardText>{props.message.text}</CardText>\n            </Card>\n          </Col>\n          <Col xs=\"4\" className=\"text-center\">\n            <strong>You</strong><br />\n            <Timestamp\n              time={props.message.timestamp / 1000} format='time'\n            />\n          </Col>\n        </Row>\n      </div>\n    );\n }\n}\n\nfunction Predictions(props) {\n  return (\n    <div className=\"Predictions\">\n      {props.intent !== null && <Intent intent={props.intent} />}\n      {props.entities.length > 0 && <Entities entities={props.entities} />}\n    </div>\n  );\n}\n\nfunction Intent(props) {\n  return (\n    <div className=\"Intent\">\n      <h2>Intent</h2>\n      <ListGroup>\n        <ListGroupItem>{props.intent}</ListGroupItem>\n      </ListGroup>\n    </div>\n  );\n}\n\nfunction Entities(props) {\n  let entities = [];\n\n  for (let i = 0; i < props.entities.length; i++) {\n    entities.push(\n      <ListGroupItem>\n        <Badge color=\"primary\" pill>{props.entities[i].type}</Badge>\n        <span className=\"float-right\">\"{props.entities[i].snippet}\"</span>\n      </ListGroupItem>\n    );\n  }\n\n  return (\n    <div className=\"Entities\">\n      <h2>Entities</h2>\n      <ListGroup>{entities}</ListGroup>\n    </div>\n  );\n}\n\nexport default Chat;\n","import PropTypes from 'prop-types';\nimport React from 'react';\nimport {\n  Button,\n  Card,\n  CardBody,\n  CardText,\n  CardTitle,\n  Col,\n  Container,\n  Row,\n} from 'reactstrap';\n\nimport './Dashboard.css'\n\nclass Dashboard extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      chats: [],\n    };\n\n    this.handleClick = this.handleClick.bind(this);\n  }\n\n  componentDidMount() {\n    this.timer = setInterval(() => this.fetchChats(), 1000);\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.timer);\n  }\n\n  fetchChats() {\n    fetch('/api/chats', {\n      'method': 'GET',\n      'credentials': 'same-origin',\n    }).then(\n      response => response.ok ? response.json() : []\n    ).then(\n      json => this.setState({chats: json})\n    )\n  }\n\n  toRows(chats) {\n    let rows = [];\n\n    for (let i = 0; i < chats.length; i = i + 3) {\n      let cols = [];\n\n      for (let j = i; j < chats.length && j < i + 3; j++) {\n        cols.push(this.toCol(chats[j]));\n      }\n\n      rows.push(<Row>{cols}</Row>);\n    }\n\n    return <div className=\"Rows\">{rows}</div>;\n  }\n\n  toCol(chat) {\n    return (\n      <Col xs=\"4\">\n        <Card>\n          <CardBody>\n            <CardTitle tag=\"h2\">{chat.customer.full_name}</CardTitle>\n            <CardText>{chat.message.text}</CardText>\n            <Button onClick={() => this.handleClick(chat.message._id)}\n              color=\"success\">\n              Accept\n            </Button>\n          </CardBody>\n        </Card>\n      </Col>\n    )\n  }\n\n  handleClick(id) {\n    fetch(`/api/chats/${id}/employees`, {\n      method: 'POST',\n      credentials: 'same-origin',\n    }).then(\n      response => {\n        if (response.ok) {\n          this.context.router.history.push(`/chats/${id}`);\n        }\n      }\n    )\n  }\n\n  render() {\n    return (\n      <div className=\"Dashboard\">\n        <Container>\n          {this.toRows(this.state.chats)}\n        </Container>\n      </div>\n    );\n  }\n}\n\nDashboard.contextTypes = {\n  router: PropTypes.object.isRequired,\n};\n\nexport default Dashboard;\n","import React from 'react';\nimport { Route } from 'react-router-dom';\n\nimport Chat from './Chat';\nimport Dashboard from './Dashboard';\n\nclass Chats extends React.Component {\n  render() {\n    const { match } = this.props;\n\n    return (\n      <div className=\"Chats\">\n        <Route path={match.path} exact component={Dashboard} />\n        <Route path={`${match.path}/:id`} component={Chat} />\n      </div>\n    );\n  }\n}\n\nexport default Chats;\n","import PropTypes from 'prop-types';\nimport React from 'react';\nimport { Container, Nav, NavItem, NavLink, Navbar } from 'reactstrap';\n\nimport './Header.css';\n\nclass Header extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleClick = this.handleClick.bind(this);\n  }\n\n  handleClick() {\n    this.props.logoutEmployee().then(\n      () => this.context.router.history.push('/')\n    );\n  }\n\n  render() {\n    return (\n      <div className=\"Header\">\n        <Navbar dark color=\"primary\" expand=\"xs\">\n          <Container>\n            <h1 className=\"navbar-text\">Contoso ACE</h1>\n            {this.props.employee !== null &&\n              <Nav navbar>\n                <NavItem className=\"navbar-text mr-3\">\n                  Hello, {this.props.employee.first_name}!\n                </NavItem>\n                <NavItem>\n                  <NavLink onClick={this.handleClick}>\n                    Sign Out\n                  </NavLink>\n                </NavItem>\n              </Nav>\n            }\n          </Container>\n        </Navbar>\n      </div>\n    );\n  }\n}\n\nHeader.contextTypes = {\n  router: PropTypes.object.isRequired,\n};\n\nexport default Header;\n","import PropTypes from 'prop-types';\nimport React from 'react';\nimport {\n  Button,\n  Card,\n  CardBody,\n  Col,\n  Container,\n  Form,\n  FormGroup,\n  Input,\n  Label,\n  Row,\n} from 'reactstrap';\n\nimport './Login.css';\n\nclass Login extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      email: '',\n      password: '',\n    };\n\n    this.handleEmailChange = this.handleEmailChange.bind(this);\n    this.handlePasswordChange = this.handlePasswordChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  handleEmailChange(event) {\n    this.setState({email: event.target.value});\n  }\n\n  handlePasswordChange(event) {\n    this.setState({password: event.target.value});\n  }\n\n  handleSubmit(event) {\n    event.preventDefault();\n\n    this.props.loginEmployee(\n      this.state.email,\n      this.state.password,\n    ).then(\n      () => this.context.router.history.push('/chats')\n    );\n  }\n\n  render() {\n    return (\n      <div className=\"Login\">\n        <Container>\n          <Row>\n            <Col xs={{ offset: 3, size: 6 }}>\n              <Card>\n                <CardBody>\n                  <Form onSubmit={this.handleSubmit}>\n                    <FormGroup>\n                      <Label for=\"Email\">Email</Label>\n                      <Input\n                        type=\"email\" name=\"Email\" id=\"Email\"\n                        placeholder=\"barbara@contoso.com\"\n                        onChange={this.handleEmailChange}\n                      />\n                    </FormGroup>\n                    <FormGroup>\n                      <Label for=\"Password\">Password</Label>\n                      <Input type=\"password\" name=\"Password\" id=\"Password\"\n                        onChange={this.handlePasswordChange}\n                      />\n                    </FormGroup>\n                    <Button type=\"submit\" color=\"primary\">Sign In</Button>\n                  </Form>\n                </CardBody>\n              </Card>\n            </Col>\n          </Row>\n        </Container>\n      </div>\n    );\n  }\n}\n\nLogin.contextTypes = {\n  router: PropTypes.object.isRequired,\n};\n\nexport default Login;\n","import React from 'react';\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\n\nimport Chats from './Chats';\nimport Header from './Header';\nimport Login from './Login';\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      employee: null,\n    };\n\n    this.loginEmployee = this.loginEmployee.bind(this);\n    this.logoutEmployee = this.logoutEmployee.bind(this);\n  }\n\n  componentDidMount() {\n    this.fetchEmployee();\n  }\n\n  fetchEmployee() {\n    return fetch('/api/employees/current', {\n      method: 'GET',\n      credentials: 'same-origin',\n    }).then(\n      response => response.ok ? response.json() : null\n    ).then(\n      json => this.setState({employee: json})\n    );\n  }\n\n  loginEmployee(email, password) {\n    return fetch('/api/employees/login', {\n      method: 'POST',\n      credentials: 'same-origin',\n      body: JSON.stringify({\n        email: email,\n        password: password,\n      }),\n    }).then(\n      response => {\n        if (response.ok) {\n          this.fetchEmployee();\n        }\n      }\n    );\n  }\n\n  logoutEmployee() {\n    return fetch('/api/employees/logout', {\n      method: 'POST',\n      credentials: 'same-origin',\n    }).then(\n      response => response.ok ? null : this.state.employee\n    ).then(\n      json => this.setState({employee: json})\n    );\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <Router>\n          <div className=\"Router\">\n            <Header\n              employee={this.state.employee}\n              logoutEmployee={this.logoutEmployee}\n            />\n            <Route\n              path=\"/\" exact\n              render={\n                props => <Login\n                           {...props}\n                           loginEmployee={this.loginEmployee}\n                         />\n              }\n            />\n            <Route path=\"/chats\" component={Chats} />\n          </div>\n        </Router>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\n\nimport * as serviceWorker from './serviceWorker';\n\nimport 'bootstrap/dist/css/bootstrap.css';\nimport './index.css';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\nserviceWorker.unregister();\n"],"sourceRoot":""}